---
- name: Use different mongod.conf for auth initialization
  template:
    src: mongod_init.conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: 0644

- name: mongodb restart
  service:
    name: "{{ mongodb_daemon_name }}"
    state: restarted

- name: wait when mongodb is started on localhost
  wait_for:
    host: "127.0.0.1"
    port: "{{ mongodb_net_port }}"
    delay: 5
    timeout: 120

- name: create administrative user "{{ mongodb_user_admin_name }}"
  community.mongodb.mongodb_user:
    database: admin
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_host: "{{ mongodb_net_bindip.split(',') | map('replace', '0.0.0.0', '127.0.0.1') | list  | first }}"
    login_port: "{{ mongodb_net_port | int }}"
  with_items:
    - name: "{{ mongodb_user_admin_name }}"
      password: "{{ mongodb_user_admin_password }}"
      roles: "userAdminAnyDatabase"
  no_log: "{{ mongodb_no_log | bool }}"

- name: create administrative user "{{ mongodb_root_admin_name }}"
  community.mongodb.mongodb_user:
    database: admin
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_host: "{{ mongodb_net_bindip.split(',') | map('replace', '0.0.0.0', '127.0.0.1') | list  | first }}"
    login_port: "{{ mongodb_net_port | int }}"
  with_items:
    - name: "{{ mongodb_root_admin_name }}"
      password: "{{ mongodb_root_admin_password }}"
      roles: "root"
  no_log: "{{ mongodb_no_log | bool }}"

- name: create backup user "{{ mongodb_root_backup_name }}"
  community.mongodb.mongodb_user:
    database: admin
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_host: "{{ mongodb_net_bindip.split(',') | map('replace', '0.0.0.0', '127.0.0.1') | list  | first }}"
    login_port: "{{ mongodb_net_port | int }}"
  with_items:
    - name: "{{ mongodb_root_backup_name }}"
      password: "{{ mongodb_root_backup_password }}"
      roles: "backup,clusterMonitor"
  no_log: "{{ mongodb_no_log | bool }}"

- name: Move back mongod.conf
  template:
    src: mongod.conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: 0644

- name: mongodb restart
  service:
    name: "{{ mongodb_daemon_name }}"
    state: restarted

- name: wait when mongodb is started
  wait_for:
    host: "{{ item }}"
    port: "{{ mongodb_net_port }}"
    timeout: 120
  with_items: "{{ mongodb_net_bindip.split(',') | map('replace', '0.0.0.0', '127.0.0.1') | list }}"

